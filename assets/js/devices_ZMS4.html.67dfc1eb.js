"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[90378],{7375:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>l,data:()=>r});var n=t(6254);const o={},l=(0,t(93887).A)(o,[["render",function(e,a){const t=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[a[7]||(a[7]=(0,n.Lk)("h1",{id:"rtx-zms4",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#rtx-zms4"},[(0,n.Lk)("span",null,"RTX ZMS4")])],-1)),(0,n.Lk)("table",null,[a[6]||(a[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[a[2]||(a[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"ZMS4")],-1)),(0,n.Lk)("tr",null,[a[1]||(a[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(t,{to:"/supported-devices/#v=RTX"},{default:(0,n.k6)((()=>a[0]||(a[0]=[(0,n.eW)("RTX")]))),_:1})])]),a[3]||(a[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Zigbee PIR sensor")],-1)),a[4]||(a[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"battery_low, occupancy")],-1)),a[5]||(a[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/ZMS4.png",alt:"RTX ZMS4"})])],-1))])]),a[8]||(a[8]=(0,n.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="occupancy-binary" tabindex="-1"><a class="header-anchor" href="#occupancy-binary"><span>Occupancy (binary)</span></a></h3><p>Indicates whether the device detected occupancy. Value can be found in the published state on the <code>occupancy</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> occupancy is ON, if <code>false</code> OFF.</p>',5))])}]]),r=JSON.parse('{"path":"/devices/ZMS4.html","title":"RTX ZMS4 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"RTX ZMS4 control via MQTT","description":"Integrate your RTX ZMS4 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2022-08-31T11:26:27.000Z"},"git":{"updatedTime":1747249035000,"contributors":[{"name":"Roman Papezhuk","username":"","email":"romaa6@ukr.net","commits":1},{"name":"Papezhuk, Roman","username":"","email":"Roman.Papezhuk@externals.adidas.com","commits":1}],"changelog":[{"hash":"1802eb1208ed92215ed6a3a48fe49abe7656d4c2","time":1747249035000,"email":"romaa6@ukr.net","author":"Roman Papezhuk","message":"add Tervix TS0601 (#3783)","coAuthors":[{"name":"Papezhuk, Roman","email":"Roman.Papezhuk@externals.adidas.com"}]}]},"filePathRelative":"devices/ZMS4.md"}')}}]);