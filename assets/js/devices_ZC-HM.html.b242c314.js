"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[15367],{49995:(e,a,o)=>{o.r(a),o.d(a,{comp:()=>s,data:()=>i});var t=o(6254);const n={},s=(0,o(93887).A)(n,[["render",function(e,a){const o=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[a[8]||(a[8]=(0,t.Lk)("h1",{id:"moes-zc-hm",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#moes-zc-hm"},[(0,t.Lk)("span",null,"Moes ZC-HM")])],-1)),(0,t.Lk)("table",null,[a[6]||(a[6]=(0,t.Lk)("thead",null,[(0,t.Lk)("tr",null,[(0,t.Lk)("th"),(0,t.Lk)("th")])],-1)),(0,t.Lk)("tbody",null,[a[2]||(a[2]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Model"),(0,t.Lk)("td",null,"ZC-HM")],-1)),(0,t.Lk)("tr",null,[a[1]||(a[1]=(0,t.Lk)("td",null,"Vendor",-1)),(0,t.Lk)("td",null,[(0,t.bF)(o,{to:"/supported-devices/#v=Moes"},{default:(0,t.k6)((()=>a[0]||(a[0]=[(0,t.eW)("Moes")]))),_:1})])]),a[3]||(a[3]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Description"),(0,t.Lk)("td",null,"Carbon monoxide alarm")],-1)),a[4]||(a[4]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Exposes"),(0,t.Lk)("td",null,"carbon_monoxide, co, self_test_result, battery, silence")],-1)),a[5]||(a[5]=(0,t.Lk)("tr",null,[(0,t.Lk)("td",null,"Picture"),(0,t.Lk)("td",null,[(0,t.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/ZC-HM.png",alt:"Moes ZC-HM"})])],-1))])]),a[9]||(a[9]=(0,t.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>To enable pairing, wait for the device led to stop, then press the device button 3 times, led should start blinking green while in pairing mode.</p><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>Options</span></a></h2>',4)),(0,t.Lk)("p",null,[(0,t.Lk)("em",null,[(0,t.bF)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,t.k6)((()=>a[7]||(a[7]=[(0,t.eW)("How to use device type specific configuration")]))),_:1})])]),a[10]||(a[10]=(0,t.Fv)('<ul><li><code>co_calibration</code>: Calibrates the co value (absolute offset), takes into effect on next report of device. The value must be a number.</li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="carbon-monoxide-binary" tabindex="-1"><a class="header-anchor" href="#carbon-monoxide-binary"><span>Carbon monoxide (binary)</span></a></h3><p>Indicates if CO (carbon monoxide) is detected. Value can be found in the published state on the <code>carbon_monoxide</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> carbon monoxide is ON, if <code>false</code> OFF.</p><h3 id="co-numeric" tabindex="-1"><a class="header-anchor" href="#co-numeric"><span>CO (numeric)</span></a></h3><p>The measured CO (carbon monoxide) value. Value can be found in the published state on the <code>co</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>ppm</code>.</p><h3 id="self-test-result-enum" tabindex="-1"><a class="header-anchor" href="#self-test-result-enum"><span>Self test result (enum)</span></a></h3><p>Result of the self-test. Value can be found in the published state on the <code>self_test_result</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>checking</code>, <code>success</code>, <code>failure</code>, <code>others</code>.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="silence-binary" tabindex="-1"><a class="header-anchor" href="#silence-binary"><span>Silence (binary)</span></a></h3><p>Silence the alarm. Value can be found in the published state on the <code>silence</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;silence&quot;: NEW_VALUE}</code>. If value equals <code>true</code> silence is ON, if <code>false</code> OFF.</p>',12))])}]]),i=JSON.parse('{"path":"/devices/ZC-HM.html","title":"Moes ZC-HM control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Moes ZC-HM control via MQTT","description":"Integrate your Moes ZC-HM via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-11-01T18:54:40.000Z"},"git":{"updatedTime":1747249035000,"contributors":[{"name":"Roman Papezhuk","username":"","email":"romaa6@ukr.net","commits":1},{"name":"Papezhuk, Roman","username":"","email":"Roman.Papezhuk@externals.adidas.com","commits":1}],"changelog":[{"hash":"1802eb1208ed92215ed6a3a48fe49abe7656d4c2","time":1747249035000,"email":"romaa6@ukr.net","author":"Roman Papezhuk","message":"add Tervix TS0601 (#3783)","coAuthors":[{"name":"Papezhuk, Roman","email":"Roman.Papezhuk@externals.adidas.com"}]}]},"filePathRelative":"devices/ZC-HM.md"}')}}]);